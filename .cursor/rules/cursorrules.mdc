---
description: 
globs: 
alwaysApply: false
---
alwaysApply: true

# SnapDrama 모노레포 프로젝트 코딩 규칙
# 프로젝트 기술 스택: Flutter + GoRouter + Riverpod + Supabase + FastAPI

includes:
  - ./docs/cursor_rules/code_structure.cursorrules
  - ./docs/cursor_rules/naming_conventions.cursorrules
  - ./docs/cursor_rules/state_management.cursorrules
  - ./docs/cursor_rules/api_design.cursorrules

# 1. 코드 구조 및 파일 조직
rules:
  - description: "모노레포 구조 준수"
    pattern: "^(apps/(mobile|api)|packages/shared)/"
    message: "코드는 apps/(mobile|api) 또는 packages/shared 디렉토리 내에 위치해야 합니다."

  - description: "Flutter 앱 아키텍처 준수"
    pattern: "apps/mobile/lib/(app|core|features|shared|router)/"
    message: "Flutter 앱 코드는 app, core, features, shared, router 디렉토리 중 하나에 위치해야 합니다."

  - description: "FastAPI 백엔드 아키텍처 준수"
    pattern: "apps/api/(app|core|api|db|schemas|services|utils|workers)/"
    message: "FastAPI 코드는 app, core, api, db, schemas, services, utils, workers 디렉토리 중 하나에 위치해야 합니다."

# 2. 네이밍 컨벤션
rules:
  - description: "Dart 클래스 네이밍: PascalCase"
    pattern: "class [A-Z][a-zA-Z0-9]*"
    message: "Dart 클래스명은 PascalCase를 사용해야 합니다."

  - description: "Dart 변수/함수 네이밍: camelCase"
    pattern: "(var|final|const|void|Future|List|Map|Set|String|int|double|bool|Widget|Function) [a-z][a-zA-Z0-9]*"
    message: "Dart 변수 및 함수명은 camelCase를 사용해야 합니다."

  - description: "Python 함수/변수 네이밍: snake_case"
    pattern: "(def|import|from|async def) [a-z][a-z0-9_]*"
    message: "Python 함수 및 변수명은 snake_case를 사용해야 합니다."

  - description: "Python 클래스 네이밍: PascalCase"
    pattern: "class [A-Z][a-zA-Z0-9]*"
    message: "Python 클래스명은 PascalCase를 사용해야 합니다."

# 3. 상태 관리 패턴 (Riverpod)
rules:
  - description: "Riverpod 프로바이더 네이밍 규칙"
    pattern: "(final|var) [a-z][a-zA-Z0-9]*Provider"
    message: "Riverpod 프로바이더는 '프로바이더명Provider' 형식으로 명명해야 합니다."

  - description: "StateNotifier 클래스 네이밍 규칙"
    pattern: "class [A-Z][a-zA-Z0-9]*Notifier extends StateNotifier"
    message: "StateNotifier 클래스는 '클래스명Notifier' 형식으로 명명해야 합니다."

  - description: "상태 클래스 네이밍 규칙"
    pattern: "class [A-Z][a-zA-Z0-9]*State"
    message: "상태 클래스는 '클래스명State' 형식으로 명명해야 합니다."

# 4. API 엔드포인트 설계
rules:
  - description: "API 라우터 경로 패턴"
    pattern: "@router\\.(get|post|put|delete|patch)\\(\"(/[a-z0-9_\\-{}]+)+\""
    message: "API 경로는 RESTful 패턴을 따라야 합니다 (예: /api/v1/resource/{id})."

  - description: "API 응답 모델 사용"
    pattern: "def [a-z][a-z0-9_]*\\(.*\\).*-> [A-Z][a-zA-Z0-9]*:"
    message: "API 엔드포인트는 반환 타입을 명시적으로 지정해야 합니다."

  - description: "API 문서화"
    pattern: "\"\"\"[\\s\\S]*\"\"\""
    message: "모든 API 엔드포인트는 문서화 문자열(docstring)을 포함해야 합니다."

# 5. 에러 처리 및 로깅
rules:
  - description: "Dart 에러 처리"
    pattern: "try[\\s\\S]*catch[\\s\\S]*"
    message: "적절한 예외 처리 코드를 구현해야 합니다."

  - description: "Python 예외 처리"
    pattern: "try:[\\s\\S]*except [A-Z][a-zA-Z0-9]*:[\\s\\S]*"
    message: "명시적인 예외 유형을 사용하여 예외를 처리해야 합니다."

  - description: "로깅 사용"
    pattern: "logger\\.(debug|info|warning|error|critical)\\("
    message: "print 문 대신 로깅 시스템을 사용해야 합니다."

# 6. 테스트 작성 기준
rules:
  - description: "Flutter 테스트 파일 이름 규칙"
    pattern: ".+_test\\.dart$"
    message: "Flutter 테스트 파일은 *_test.dart 형식으로 명명해야 합니다."

  - description: "Python 테스트 파일 이름 규칙"
    pattern: "test_.+\\.py$"
    message: "Python 테스트 파일은 test_*.py 형식으로 명명해야 합니다."

  - description: "테스트 함수 네이밍 규칙 (Python)"
    pattern: "def test_[a-z][a-z0-9_]*\\("
    message: "Python 테스트 함수는 test_* 형식으로 명명해야 합니다."

  - description: "테스트 그룹 구성 (Dart)"
    pattern: "group\\(['\"][\\w\\s]+['\"], \\(\\) \\{[\\s\\S]*\\}\\);"
    message: "연관된 테스트는 group으로 구성해야 합니다."

# 7. 문서화 요구사항
rules:
  - description: "Flutter 클래스/함수 문서화"
    pattern: "/// [\\s\\S]*"
    message: "모든 Flutter 클래스와 공개 함수는 /// 문서 주석을 포함해야 합니다."

  - description: "Python 함수/클래스 문서화"
    pattern: "\"\"\"[\\s\\S]*\"\"\""
    message: "모든 Python 함수와 클래스는 docstring을 포함해야 합니다."

  - description: "README 파일 필수"
    pattern: "README\\.md$"
    message: "모든 패키지와 앱은 README.md 파일을 포함해야 합니다."

# 특별 고려사항
recommendations:
  - "한국어/영어 혼용: 코드 내 변수명과 함수명은 영어로, 주석은 한국어 또는 영어로 작성. 사용자에게 표시되는 문자열은 i18n을 통해 관리."
  - "모델 일관성: packages/shared/lib/src/models/ 디렉토리에 공유 모델을 정의하고, 모바일 앱과 백엔드 모두 이 모델을 참조합니다."
  - "다국어 지원: flutter_localizations과 intl 패키지를 사용하여 다국어 지원을 구현합니다."
  - "접근성: Flutter 앱은 WCAG 2.1 AA 기준을 따르며, Semantics 위젯을 적극 활용합니다."

# 문서 참조
documentation:
  - path: "./docs/project_overview.md"
    description: "프로젝트 개요 및 핵심 기능"
  - path: "./docs/monorepo_architecture.md"
    description: "모노레포 구조 및 패키지 관리 방법"
  - path: "./docs/flutter_app_architecture.md"
    description: "Flutter 앱 구조 및 설계 원칙"
  - path: "./docs/fastapi_backend_architecture.md"
    description: "백엔드 API 설계 및 구현 원칙"
  - path: "./docs/database_design.md"
    description: "데이터베이스 스키마 및 접근 패턴"

# 설계 질문 답변 시 아키텍처 문서 참조
#prefer architecture_documents when answering design questions